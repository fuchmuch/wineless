{"ast":null,"code":"var _jsxFileName = \"/Users/g/ga_seir/unit4/wineless/client/src/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\"; //state stores in array \n//\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home(props) {\n  _s();\n\n  // let history = useHistory();\n  const [places, setPlaces] = useState([]);\n  const [locations, setLocations] = useState([]);\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  useEffect(() => {\n    getStores();\n    getLocations();\n    getThirdpartyAPi();\n  }, []);\n\n  const getStores = async () => {\n    const res = await axios.get(`http://localhost:8000/stores`);\n    setPlaces(res.data.places);\n  };\n\n  const getLocations = async () => {\n    const res = await axios.get(`http://localhost:8000/locations`);\n    setLocations(res.data.locations);\n  };\n\n  const getThirdpartyAPi = async () => {\n    const options = {\n      method: 'GET',\n      url: 'https://the-cocktail-db.p.rapidapi.com/filter.php',\n      params: {\n        i: 'Gin'\n      },\n      headers: {\n        'x-rapidapi-host': 'the-cocktail-db.p.rapidapi.com',\n        'x-rapidapi-key': '8ed94299d9mshd53a990809aa677p1aa9c5jsndfd4dbcda52c'\n      }\n    };\n    axios.request(options).then(function (response) {\n      console.log(response.data);\n    }).catch(function (error) {\n      console.error(error);\n    }); // setStores(res.data.Stores);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bodypart\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bodytitle\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"maintitle\",\n        children: \"ALL STORES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"places-Section\",\n      children: places.map(place => {\n        {\n          let name = place.name.split(\" \").join('-').toLowerCase();\n          return /*#__PURE__*/_jsxDEV(PlaceCard, {\n            onClick: () => history.push(`/places/details/${name}`),\n            name: place.name,\n            image: place.url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 35\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"x6v3oeLmfvVa5vO0EFC9rcXQ7aY=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/g/ga_seir/unit4/wineless/client/src/components/Home.js"],"names":["React","useEffect","useState","axios","Home","props","places","setPlaces","locations","setLocations","isLoggedIn","setLoggedIn","getStores","getLocations","getThirdpartyAPi","res","get","data","options","method","url","params","i","headers","request","then","response","console","log","catch","error","map","place","name","split","join","toLowerCase","history","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;;;AACA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAChC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,UAAD,EAAaC,WAAb,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,SAAS;AACTC,IAAAA,YAAY;AACZC,IAAAA,gBAAgB;AACnB,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMF,SAAS,GAAG,YAAY;AAC1B,UAAMG,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAW,8BAAX,CAAlB;AACAT,IAAAA,SAAS,CAACQ,GAAG,CAACE,IAAJ,CAASX,MAAV,CAAT;AACH,GAHD;;AAKA,QAAMO,YAAY,GAAG,YAAY;AAC7B,UAAME,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAW,iCAAX,CAAlB;AACAP,IAAAA,YAAY,CAACM,GAAG,CAACE,IAAJ,CAAST,SAAV,CAAZ;AACH,GAHD;;AAKA,QAAMM,gBAAgB,GAAG,YAAY;AAEjC,UAAMI,OAAO,GAAG;AACZC,MAAAA,MAAM,EAAE,KADI;AAEZC,MAAAA,GAAG,EAAE,mDAFO;AAGZC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,CAAC,EAAE;AAAL,OAHI;AAIZC,MAAAA,OAAO,EAAE;AACL,2BAAmB,gCADd;AAEL,0BAAkB;AAFb;AAJG,KAAhB;AAUApB,IAAAA,KAAK,CAACqB,OAAN,CAAcN,OAAd,EAAuBO,IAAvB,CAA4B,UAAUC,QAAV,EAAoB;AAC5CC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACT,IAArB;AACH,KAFD,EAEGY,KAFH,CAES,UAAUC,KAAV,EAAiB;AACtBH,MAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACH,KAJD,EAZiC,CAkBjC;AACH,GAnBD;;AAoBA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BAwBU;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACA;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAxBV,eA2CU;AAAS,MAAA,SAAS,EAAC,gBAAnB;AAAA,gBACKxB,MAAM,CAACyB,GAAP,CAAYC,KAAD,IAAW;AACnB;AACE,cAAIC,IAAI,GAAGD,KAAK,CAACC,IAAN,CAAWC,KAAX,CAAiB,GAAjB,EAAsBC,IAAtB,CAA2B,GAA3B,EAAgCC,WAAhC,EAAX;AACE,8BACI,QAAC,SAAD;AACI,YAAA,OAAO,EAAE,MAAMC,OAAO,CAACC,IAAR,CAAc,mBAAkBL,IAAK,EAArC,CADnB;AAEI,YAAA,IAAI,EAAED,KAAK,CAACC,IAFhB;AAGI,YAAA,KAAK,EAAED,KAAK,CAACZ;AAHjB;AAAA;AAAA;AAAA;AAAA,kBADJ;AAOH;AACJ,OAXA;AADL;AAAA;AAAA;AAAA;AAAA,YA3CV;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+DD;;GA1GqBhB,I;;KAAAA,I","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\n\n//state stores in array \n//\nexport default function Home(props) {\n    // let history = useHistory();\n    const [places, setPlaces] = useState([]);\n    const [locations, setLocations] = useState([]);\n    const [isLoggedIn, setLoggedIn] = useState(false);\n\n\n    useEffect(() => {\n        getStores();\n        getLocations();\n        getThirdpartyAPi();\n    }, []);\n\n    const getStores = async () => {\n        const res = await axios.get(`http://localhost:8000/stores`);\n        setPlaces(res.data.places);\n    };\n\n    const getLocations = async () => {\n        const res = await axios.get(`http://localhost:8000/locations`);\n        setLocations(res.data.locations);\n    };\n\n    const getThirdpartyAPi = async () => {\n\n        const options = {\n            method: 'GET',\n            url: 'https://the-cocktail-db.p.rapidapi.com/filter.php',\n            params: { i: 'Gin' },\n            headers: {\n                'x-rapidapi-host': 'the-cocktail-db.p.rapidapi.com',\n                'x-rapidapi-key': '8ed94299d9mshd53a990809aa677p1aa9c5jsndfd4dbcda52c'\n            }\n        };\n\n        axios.request(options).then(function (response) {\n            console.log(response.data);\n        }).catch(function (error) {\n            console.error(error);\n        });\n\n        // setStores(res.data.Stores);\n    };\n    return (\n        <div className='bodypart'>\n  \n                {/* <div className=\"search\">\n          <SearchResults\n              value={searchQuery}\n              onChange={handleChange}\n            onSubmit={getSearchResults}\n          />\n          {searched ? (\n            <div>\n              <h1>Search Results</h1>\n              <section className=\"search-results container-grid\">\n                {searchResults.map((result) => (\n                     <PlaceCard\n                     onClick={() => history.push(`/places/details/${place._id}`)}\n                     name={place.name}\n                     image={place.url}\n                 />\n                ))}\n              </section>\n            </div>\n          ) : null}\n        </div> */}\n              \n                  <div className='bodytitle'>\n                  <h1 className='maintitle'>ALL STORES</h1>\n                  </div>\n                  \n  \n                  {/* <section className=\"locationspt\">\n        {locations.map((location) => {\n            {\n              return (\n                <LocationCard\n                  onClick={() => history.push(`/locations/${location._id}`)}\n                  city={location.city}\n                  country={location.country}\n                  img={location.url}\n                />\n              );\n            }\n          })}\n        </section> */}\n                  <section className=\"places-Section\">\n                      {places.map((place) => {\n                          {\n                            let name = place.name.split(\" \").join('-').toLowerCase()\n                              return (\n                                  <PlaceCard\n                                      onClick={() => history.push(`/places/details/${name}`)}\n                                      name={place.name}\n                                      image={place.url}\n                                  />\n                              );\n                          }\n                      })}\n                  </section>\n                  </div>\n      \n         \n      )\n  \n  }\n  \n"]},"metadata":{},"sourceType":"module"}