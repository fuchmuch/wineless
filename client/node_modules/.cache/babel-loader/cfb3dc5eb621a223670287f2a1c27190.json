{"ast":null,"code":"const {\n  GET_STORES,\n  GET_STORE_BY_ID,\n  IS_LOADING\n} = require('../types');\n\nconst initialState = {\n  stores: [],\n  store: [],\n  isLoading: true\n};\n\nconst StoreReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case IS_LOADING:\n      return { ...state,\n        isLoading: action.payload\n      };\n\n    case GET_STORES:\n      return { ...state,\n        stores: action.payload\n      };\n\n    case GET_STORE_BY_ID:\n      return { ...state,\n        sotre: action.payload\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\n_c = StoreReducer;\nexport default StoreReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreReducer\");","map":{"version":3,"sources":["/Users/g/ga_seir/unit4/wineless/client/src/store/reducers/StoreReducer.js"],"names":["GET_STORES","GET_STORE_BY_ID","IS_LOADING","require","initialState","stores","store","isLoading","StoreReducer","state","action","type","payload","sotre"],"mappings":"AAAA,MAAM;AAAEA,EAAAA,UAAF;AAAcC,EAAAA,eAAd;AAA+BC,EAAAA;AAA/B,IAA8CC,OAAO,CAAC,UAAD,CAA3D;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,SAAS,EAAE;AAHM,CAArB;;AAMA,MAAMC,YAAY,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AACnD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,UAAL;AACI,aAAO,EAAE,GAAGO,KAAL;AAAYF,QAAAA,SAAS,EAAEG,MAAM,CAACE;AAA9B,OAAP;;AACJ,SAAKZ,UAAL;AACI,aAAO,EAAE,GAAGS,KAAL;AAAYJ,QAAAA,MAAM,EAAEK,MAAM,CAACE;AAA3B,OAAP;;AACJ,SAAKX,eAAL;AACI,aAAO,EAAE,GAAGQ,KAAL;AAAYI,QAAAA,KAAK,EAAEH,MAAM,CAACE;AAA1B,OAAP;;AACJ;AACI,aAAO,EAAE,GAAGH;AAAL,OAAP;AARR;AAUH,CAXD;;KAAMD,Y;AAaN,eAAgBA,YAAhB","sourcesContent":["const { GET_STORES, GET_STORE_BY_ID, IS_LOADING } = require('../types')\n\nconst initialState = {\n    stores: [],\n    store: [],\n    isLoading: true\n}\n\nconst StoreReducer = (state = initialState, action) => {\n    switch(action.type) { \n        case IS_LOADING:\n            return { ...state, isLoading: action.payload}\n        case GET_STORES:\n            return { ...state, stores: action.payload }\n        case GET_STORE_BY_ID:\n            return { ...state, sotre: action.payload }\n        default: \n            return { ...state }\n    }\n}\n\nexport default  StoreReducer\n\n"]},"metadata":{},"sourceType":"module"}