{"ast":null,"code":"const {\n  IS_LOGGEDIN,\n  GET_USER,\n  NEW_USER,\n  DELETE_USER,\n  UPDATE_USER\n} = require('../types');\n\nconst initialState = {\n  isLoggedin: false,\n  user: {},\n  newUser: {}\n};\n\nconst UserReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case IS_LOGGEDIN:\n      return { ...state,\n        isLoggedin: action.payload\n      };\n\n    case NEW_USER:\n      return { ...state,\n        newUser: { ...state.newUser,\n          ...action.payload\n        }\n      };\n\n    case GET_USER:\n      return { ...state,\n        user: action.payload\n      };\n\n    case UPDATE_USER:\n      return { ...state,\n        user: { ...state.user,\n          ...action.payload\n        }\n      };\n\n    case DELETE_USER:\n      return { ...state,\n        user: action.payload\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\n_c = UserReducer;\nexport default UserReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserReducer\");","map":{"version":3,"sources":["/Users/g/ga_seir/unit4/wineless/client/src/store/reducers/UserReducer.js"],"names":["IS_LOGGEDIN","GET_USER","NEW_USER","DELETE_USER","UPDATE_USER","require","initialState","isLoggedin","user","newUser","UserReducer","state","action","type","payload"],"mappings":"AAAA,MAAM;AAAEA,EAAAA,WAAF;AAAeC,EAAAA,QAAf;AAAyBC,EAAAA,QAAzB;AAAmCC,EAAAA,WAAnC;AAAgDC,EAAAA;AAAhD,IAAgEC,OAAO,CAAC,UAAD,CAA7E;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,KADK;AAEjBC,EAAAA,IAAI,EAAE,EAFW;AAGjBC,EAAAA,OAAO,EAAE;AAHQ,CAArB;;AAQA,MAAMC,WAAW,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKb,WAAL;AACI,aAAO,EAAE,GAAGW,KAAL;AAAYJ,QAAAA,UAAU,EAAEK,MAAM,CAACE;AAA/B,OAAP;;AACJ,SAAKZ,QAAL;AACI,aAAO,EAAE,GAAGS,KAAL;AAAYF,QAAAA,OAAO,EAAE,EAAC,GAAGE,KAAK,CAACF,OAAV;AAAmB,aAAGG,MAAM,CAACE;AAA7B;AAArB,OAAP;;AACJ,SAAKb,QAAL;AACI,aAAO,EAAE,GAAGU,KAAL;AAAYH,QAAAA,IAAI,EAAEI,MAAM,CAACE;AAAzB,OAAP;;AACJ,SAAKV,WAAL;AACI,aAAO,EAAE,GAAGO,KAAL;AAAYH,QAAAA,IAAI,EAAE,EAAC,GAAGG,KAAK,CAACH,IAAV;AAAgB,aAAGI,MAAM,CAACE;AAA1B;AAAlB,OAAP;;AACJ,SAAKX,WAAL;AACI,aAAO,EAAE,GAAGQ,KAAL;AAAYH,QAAAA,IAAI,EAAEI,MAAM,CAACE;AAAzB,OAAP;;AACJ;AACI,aAAO,EAAE,GAAGH;AAAL,OAAP;AAZR;AAcH,CAfD;;KAAMD,W;AAiBN,eAAeA,WAAf","sourcesContent":["const { IS_LOGGEDIN, GET_USER, NEW_USER, DELETE_USER, UPDATE_USER } = require('../types')\n\nconst initialState = { \n    isLoggedin: false,\n    user: {},\n    newUser: {\n\n    }\n}\n\nconst UserReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case IS_LOGGEDIN:\n            return { ...state, isLoggedin: action.payload }\n        case NEW_USER:\n            return { ...state, newUser: {...state.newUser, ...action.payload}}\n        case GET_USER:\n            return { ...state, user: action.payload }\n        case UPDATE_USER:\n            return { ...state, user: {...state.user, ...action.payload}}\n        case DELETE_USER:\n            return { ...state, user: action.payload }\n        default:\n            return { ...state }\n    }\n}\n\nexport default UserReducer\n\n\n"]},"metadata":{},"sourceType":"module"}